[uwsgi]
# Указываем модуль и приложение для uWSGI
# 'backend' - это имя файла (backend.py)
# 'app' - это имя приложения Flask, объявленное как app = Flask(__name__)
module = backend:app

# Включаем режим master
# Режим master управляет воркерами и отвечает за их создание и завершение
master = true

# Указываем количество воркеров (процессов) для обработки запросов
# Это количество воркеров, которые будут обрабатывать входящие запросы
processes = 4

# Настраиваем сокет для взаимодействия с NGINX
# Здесь мы указываем, что uWSGI будет использовать Unix сокет /tmp/backend.sock
socket = /tmp/backend.sock

# Устанавливаем права доступа на сокет
# 660 означает, что владелец и группа могут читать и писать, остальные пользователи не имеют доступа
chmod-socket = 660

# Включаем очистку сокета при завершении работы
# vacuum = true указывает на удаление сокета при завершении работы uWSGI
vacuum = true

# Завершаем работу uWSGI при получении сигнала завершения (TERM)
# Это позволяет корректно завершать работу сервера при перезапуске или остановке
die-on-term = true

